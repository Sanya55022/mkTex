.% 1
.s 76 76
.d OD 4605731.16197 - 01
.d ND ОПИСАНИЕ ПРИМЕНЕНИЯ
._ \OD 31 01 MVN
.!   А_Н_Н_О_Т_А_Ц_И_Я
.^
Данный   документ   содержит   описание
документатора  RIO,  который  предназначен
для форматирования текстов. Документатор позволяет в частности,
готовить  документацию  в соответствии с
требованиями  ЕСПД,  СПДС  и  ЕСКД, и  может
эксплуатироваться в операционных
системах
UNIX, RSX-11М и MS-DOS.
.^
Основное  внимание   уделено   описанию
команд документатора.  Изложение иллюстрируется
примерами.
.!
.% 3
.1 Общие сведения и \
используемые технические средства
.^
Обозначение программы: \OD.
.^
Наименование программы: документатор RIO.
.^
Документатор  RIO  может  применяться  на  ЭВМ  СМ_4,
СМ_1420,  СМ_1600, IBM PC XT/AT в  операционных системах UNIX,
RSX-11М и MS-DOS.
.^
Поскольку  операционные  системы,  подобные   UNIX,   в
принципе мобильны, возможно применение документатора RIO и
на других типах ЭВМ, оснащенных такими системами,
или хотя бы компилятором языка СИ, в частности,
на ЕС ЭВМ, ROBOTRON-1715, ИСКРА-1030 и т.д.
.^
Для  функционирования  документатора  RIO   необходим
базовый комплект внешних устройств.
.^
К числу отечественных операционных  систем,  основанных
на системе UNIX, относятся следующие системы:
.-
ИНМОС;
.-
ДЕМОС;
.-
УНИКС-226.
.^
К числу отечественных операционных  систем,  основанных
на системе RSX, относятся все версии системы ОС РВ.
.^
В дальнейшем, говоря о системе UNIX, мы будем  иметь  в
виду семейство операционных систем, прототипом которых является
UNIX.  То же относится и к системе RSX-11M.
.^
Документатор RIO написан на языке СИ.
.1  Функциональное назначение
.^
Документатор  RIO  предназначен  для   форматирования
текста и, возможно, размещения его на бланке.
.^
В базовом комплекте находятся бланки (см. приложения)
соответствующие:
.-
ГОСТ 19.106-78 единой системы программной
документации   (ЕСПД);
.-
ГОСТ 2.004-79  единой системы конструкторской
документации  (ЕСКД);
.-
ГОСТ 21.103-78 системы проектной документации для
строительства  (СПДС).
.1  Вызов документатора
.^
Вызов   на   выполнение    документатора RIO
осуществляется командой:
.B 1

.: RIO [+начало] [-конец] [команда...] [-Iфайл] <вход >выход.
.^
Опции означают:
.{ 10
.? -p
вывод производится без разбивки на страницы;
.? +начало
выводятся страницы текста, начиная со страницы с номером 'начало'
(по умолчанию\ - с первой);
.? -конец
выводятся страницы текста, вплоть  до страницы с номером 'конец'
(по умолчанию\ - до конца текста);
.? команда...
набор любых команд документатора в обычном формате
(<точка><имя_команды> <тело_команды>).
Команды должны разделяться пробелом или табуляцией.
.^
Примечания:
.(
.+
Если в теле команды (в командной строке) нужно использовать
комбинацию  '\ .' (пробел+точка), точка должна быть значащей:
'\ \\.'.
.+
Если,   при работе в RSX-11М,
в теле команды нужно использовать русские литеры, то необходимо
установить задачу RIO  и
заключить русские слова в двойные (") кавычки.
.)
.? -Iфайл
Индексы будут выводиться в файл, имя которого следует сразу после
опции -I. При этом будет игнорироваться имя, задаваемое в команде .I .
.}
.^
Примеры:
.= RIO -? или RIO /HELP или RIO помоги! и т.д.
приведут к выводу подсказки о формате вызова;
.=
.= RIO +3 -60 .% 2 .* FORMAT.A4 .D AA "цена"  \\.5 "тыс"
Печатать страницы с 3 по 60 включительно,
номер первой страницы 3 (текущей - 2!!!),
выводить на бланк, который содержится в файле
с именем FORMAT.A4, макропеременная 'AA'
получит значение 'цена .5 тыс', ввод и вывод связаны с терминалом;
.=
.= RIO <D31.RIO >D31.DOC
вызов RIO для форматирования данной документации.
.=
.1  Входные и выходные данные
.^
Входные данные  документатора  -  это  исходный  текст,
подлежащий  форматированию.  Исходный текст состоит из обычных
строк,  содержащих  собственно   текст   документа,   и
управляющих   строк,   содержащих   команды  форматирования.
Управляющие строки отличаются от обычных тем, что содержат в
первой   колонке   управляющий   символ    точку.
.^
За  управляющим  символом  следует
односимвольное  имя  команды.  имена  команд  это - малые
латинские буквы, цифры и специальные знаки.  Команды могут  иметь  аргументы,
которые разделяются между собой пробелами.
.^
Обычные строки могут быть переменной длины.  Рекомендуем
делать  их короткими, т.к. короткие строки легче редактировать.
Удобно также начинать новую  строку  после  точки  или
запятой, т.к. чаще всего корректировка состоит в замене или
удалении предложений и оборотов.
.^
Если не установлен режим автопараграфа (см. команду .A),
то     пробелы, символы табуляции и пустые строки
рассматриваются только как разделители слов.
.^
При  подготовке  исходного  текста  необходимо  помнить
следующее:
.(
.+
аргументы команд  представляют  собой  либо  символьные
строки,  например,  заголовок раздела, либо числа, например,
номер страницы.
.+
аргументы-строки, как и рядовые строки,
допускают продолжение с помощью символа
обратной косой черты '\\'
(суммарная длина строки и ее продолжений не должна
превышать 400 символов, а длина самой входной строки не должна превышать
200 символов.
.+
аргументы-числа  задают        безразмерные   величины,
например,  количество  пропускаемых строк.
.+
для того, чтобы строка, начинающаяся с точки, не
воспринималась как команда, следует начинать ее
со "значащей точки", которая представляет собой
последовательность - обратная косая черта и точка.
.+
если необходимо в текст включить пробелы, которые
воспринимались бы программой RIO как символы, а не
как разделители слов, следует заменять их
"значащим пробелом" - обратная косая черта и пробел.
.+
если необходимо включить в текст сам символ обратной
косой черты, то его следует удваивать.
.+
в тексте могут находиться  символы с кодами от 3 до 31,
кроме символа конца файла MS-DOS (^Z), имеющего код 26.
.+
все команды RIO вызывают разрыв форматирования.
.)
.^
Выходные данные  представляют  собой  отформатированный
текст.
.1 Команды RIO
.d im И_м_я
.d fo Ф_о_р_м_а_т
.d op О_п_и_с_а_н_и_е
.d og З_а_м_е_ч_а_н_и_я
.^
Описания команд  имеют  стандартный  формат.   описание
каждой команды состоит по крайней мере из трех секций:
.{ 15
.? \im
приводится имя команды и ее назначение;
.? \fo
приводится   формат   команды.    аргументы-символьные
строки  обозначаются  "STRING".
Аргументы-числа  обозначаются  "N".
Квадратные скобки означают, что
заключенный в них аргумент не является  обязательным;
.? \op
приводится  описание  действий,  выполняемых
командой, и смысл ее аргументов.
.}
.|
Может присутствовать, также,  секция  \og,  в
которой  описываются  условия  применения команды и побочные
эффекты от ее выполнения.
.2  Базовые команды
.= \im
 .S - установить размер страницы
.=
.= \fo
 .S N1 N2
.=
.= \op
устанавливается количество строк на листе - N1.
.=
.b
устанавливается ширина  листа - N2 символов.
.b
ширина листа не должна превышать 132 символов.
.= \og
команда допустима только если не установлен режим вывода
на бланк (см. команду\ .*).
.=
.= \im
 .PB - установить количество пустых строк до поля номера страницы
.=
.= \fo
 .PB N
.= \op
устанавливается N пустых строк, выводимых перед полем
номера страницы.
.= \og
команда допустима только если не установлен режим вывода
на бланк (см. команду\ .*).
.= \im
 .PA - установить количество пустых строк после верхнего колонтитула
.= \fo
 .PA N
.= \op
устанавливается N пустых строк, выводимых после верхнего
колонтитула. Заметим, что верхний колонтитул следует непосредственно
за полем номера страницы.
.= \og
команда допустима только если не установлен режим вывода
на бланк (см. команду\ .*).
.= \im
 .HB - установить количество пустых строк до заголовка
.= \fo
 .HB PAIR1 PAIR2 ... PAIR10
.B 1
где PAIRi имеет вид: Hi N либо Hi-Hj N. Числа Hi, Hj могут принимать
значения от 0 до 9, они обозначают соответствующие уровни заголовков.
Диапазон уровней заголовков задается через дефис. Число N обозначает
количество пустых строк, выводимых до заголовка заданного уровня.
.= \op
устанавливается заданное число пустых строк, выводимых до
соответствующих заголовков. Команда имеет переменное число аргументов.
.= \og
команда допустима только если не установлен режим вывода
на бланк (см. команду\ .*).
.= \im
 .HA - установить количество пустых строк после заголовка
.= \fo
 .HA PAIR1 PAIR2 ... PAIR10
.B 1
где PAIRi имеет вид: Hi N либо Hi-Hj N. Числа Hi, Hj могут принимать
значения от 0 до 9, они обозначают соответствующие уровни заголовков.
Диапазон уровней заголовков задается через дефис. Число N обозначает
количество пустых строк, выводимых после заголовка заданного уровня.
.= \op
устанавливается заданное число пустых строк, выводимых после
соответствующих заголовков. Команда имеет переменное число аргументов.
.= \og
команда допустима только если не установлен режим вывода
на бланк (см. команду\ .*).
.= \im
 .F - установить режим форматирования
.= \fo
 .F
.= \op
устанавливается режим форматирования текста:
наполнение, выравнивание, перенос.
Этот режим устанавливается по умолчанию  и, следовательно,
команда нужна только для отмены режима без форматирования
(команда .N).
.= \og
переносятся слова содержащие только русские строчные
буквы и дефис.
В начале и в конце (но не внутри!) слова допускаются
знаки пунктуации.
.= \im
 .N - отменить   режим форматирования
.= \fo
 .N
.= \op
отменяется      режим форматирования текста.
Строки входного файла, не являющиеся командами,
переносятся в выходной файл без изменений (макроподстановка
и продолжение строк выполняются).
.= \og
не обрабатываются команды, связанные с форматированием
текста (абзацы, пояснения, центрирование и т.д.).
.= \im
 ._  - установить обозначение документа
.= \fo
 ._ [STRING]
.= \op
устанавливается обозначение документа.
Позиция обозначения определяется символом '@' в описании бланка
(см. команду\ .*).
.b
если не установлен режим вывода на бланк, то обозначение
документа выводится как колонтитул (аналогично гост ЕСПД).
.b
аргумент определяет  обозначение документа, которое запоминается
во внутренней макропеременной  @_.   При  отсутствии
аргумента  этой строке присваивается пустое значение.
.= \im
 .a - изменить   режим автопараграфа
.= \fo
 .a
.= \op
запретить автопараграф, если он разрешен,
и установить автопараграф, если он запрещен.
.b
Режим автопараграфа означает, что
строка, начинающаяся с символа пробела или табуляции,
начинает новый абзац (аналогично .^).
.= \og
все, сказанное выше, имеет место только в режиме форматирования.
.b
По умолчанию автопараграф запрещен.
.= \im
 .H - изменить   режим переноса
.= \fo
 .H
.= \op
запретить переносы, если они разрешены,
и разрешить переносы, если они запрещены.
.b
По умолчанию переносы разрешены.
.p 10
.= \im
 .; - комментарий
.= \fo
 .; [STRING]
.= \op
аргумент  STRING не попадает в выходной текст
и выводится в файл стандартного вывода ошибок (сообщений).
Команда может быть использована для организации диалога с пользователем.
.2        Управление страницами
.= \im
 .P  - перейти на новую страницу
.= \fo
 .P [N]
.= \op
если команда .P без аргумента встретилась в начале страницы,
никаких действий не производится.  В противном случае
(не в начале страницы)
производится переход на новую страницу.
.b
Если указан аргумент N и количество
свободных строк на текущей странице
меньше N, то выполняется переход на новую
страницу, иначе - ничего.
.= \im
 .%  - установить номер текущей страницы
.= \fo
 .% STRING
.= \op
аргумент принимает одно из трех  значений:  минус,
плюс или число.
.b
Минус означает: отменить печать номеров страниц  и
обозначения документа.
.b
Плюс означает: восстановить печать номеров страниц
и обозначения документа.
.b
Число означает: текущая страница  получит  номер
N.   Дальнейшие  номера  страниц  будут  N+1, N+2,
и т.д.
.= \og
Действие команды .%   проявится  только на следующей
странице (номер станет на
единицу больше!). Поэтому .%  нужно  давать
заблаговременно.
.b
Поскольку по умолчанию печать  номеров  страниц  и
обозначения   документа  включена
(номер страницы - 1),               команда  .%  с
аргументом плюс нужна только для  отмены  действия
команды .% с аргументом минус.
.=
.2 Рубрикация
.^
Как правило, документ состоит из отдельных рубрик,  таких,
как раздел, подраздел, пункт.  Каждой рубрике
сопоставлено число, называемое уровнем рубрики, а именно:
.^
1 - раздел;
.^
2 - подраздел;
.^
3 - пункт.
.^
Таким  образом,  раздел  -  это  рубрика  1-го  уровня,
подраздел - рубрика 2-го уровня и пункт - рубрика 3-го
уровня.
.^
Рубрики  имеют  номера  (в  общем   случае   составные,
например,  1.3.2.)  и  могут  иметь заголовки (раздел обязан
иметь заголовок).
.^
Номера рубрик хранятся во внутренних макропеременных
@1, @2, @3 (раздел, подраздел, пункт            соответственно).
.^
Документатор RIO поддерживает следующий стиль оформления
рубрик:
.{
.?
рубрики 1-го уровня начинаются с новой страницы.
Заголовок рубрики центрируется.
.?
остальные рубрики продолжаются на текущей странице.
Заголовок выравнивается по левому краю.
.}
.= \im
  .1  - рубрика. Уровень=1
.b
  .2 - рубрика. Уровень=2
.b
  .3 - рубрика. Уровень=3
.B
  .0 - ненумеруемая рубрика
.= \fo
  .1  STRING
.B
  .2 [STRING]
.B
  .3 [STRING]
.B
  .0  STRING
.= \op
Начинается новая рубрика.  Печатается либо заголовок
с составным  номером  (при  наличии  аргумента
STRING),  либо  составной номер (в противном случае).
.= \og
При переходе к новой рубрике  уровень  рубрики  не
может увеличиться более, чем на 1.  Команда .0  не
формирует составного номера рубрики, однако  стиль
печати заголовка определяется в предположении, что
уровень  рубрики  равен  1.
.P 10
.= \im
  .C - глава
.= \fo
  .C [STRING]
.= \op
Начинается очередная глава.
Номер текущей главы находится во внутренней
макропеременой @C.
Глава начинается с новой страницы.
В центре строки печатается слово глава и номер,
а через  строку название главы.
Главы нумеруются начиная с 1.
Для изменения начального номера главы можно
использовать команду:
.|
.:  .D @H нужный_номер_главы.
.|
Аналогично можно устанавливать номера рубрик всех уровней
и нумеруемого приложения.
.=
.2  Вертикальные перемещения
.^
Под вертикальным  перемещением  будем  понимать  разрыв
форматирования,   сопровождаемый,   вообще  говоря,  выводом
определенного количества пустых строк.
.= \im
   .B - пропуск строк
.= \fo
   .B [N]
.= \op
пропускается  N строк.
При положительном N отсчет ведется
от текущей строки.  При  отрицательном  N  отсчет
ведется  от  конца страницы вверх.
Если аргумент опущен, подразумевается 0.
.= \im
  .|  - абзац без горизонтального отступа
.= \fo
  .|
.= \op
выводится  пустая   строка.
Команда эквивалентна команде .B\ 1.
.=
.2 Горизонтальные перемещения
.= \im
 .L  - установить левое поле
.= \fo
 .L [[+-]N]
.= \op
левое поле устанавливается равным N. Левое поле
должно быть не больше правого поля и не меньше 0.
Если N опущено, принимается N = 0.
.B
Если указан знак '+', то левое поле увеличивается на N.
.B
Если указан знак '-', то левое поле уменьшается  на N.
.B
Текущее значение левого поля находится во внутренней
макропеременной @L.
.= \im
 .R  - установить правое поле
.= \fo
 .R [[+-]N]
.= \op
правое поле устанавливается равным N. Правое поле
должно быть не меньше левого  поля и не больше правого края
страницы и выдается предупреждение.
Если N опущено, то  правое поле принимается равным
правому краю  страницы.
.B
Если указан знак '+', то правое поле увеличивается на N.
.B
Если указан знак '-', то правое поле уменьшается  на N.
.B
Текущее значение правого поля находится во внутренней
макропеременной @R.
.= \im
 .:  - центрировать текст
.= \fo
 .: STRING
.= \op
Аргумент STRING центрируется между левым и правым полями.
.= \og
Аргумент STRING допускает продолжения с помощью экранирующего
символа '\\', однако суммарная длина аргумента должна быть
меньше разности правого и левого полей.
.=
.2 Индексация
.^
RIO допускает создание индексов вашего документа
в отдельном файле.
Для этого служат две команды: .I и .X .
.= \im
 .X - занести индекс в файл
.= \fo
 .X STRING
.= \op
Аргумент STRING помещается во временный файл вместе с номером
текущей страницы.
.= \im
 .I - создать отсортированный выводной файл индексов
.= \fo
 .I STRING
.= \op
Индексы, накопленные во временном файле, сортируются
в лексикографическом порядке программой
SORT (если таковая имеется в системе), которой в качестве выходного файла
задается файл, определенный в командной строке (опция -I) или
в строке STRING.
.= \og
В любом случае временный файл уничтожается.
.=
.2 Подключение файлов
.^
RIO допускает    вызов  для форматирования нового файла
непосредственно из текущего файла.
.= \im
 .<  - подключить файл
.= \fo
 .< STRING
.= \op
В качестве нового входного текста рассматривается текст файла,
имя которого задано аргументом STRING.
После окончания обработки этого файла продолжается
обработка исходного файла.
.B
Подключаемый файл может сам содержать команду подключения файла.
.= \og
Максимальная глубина вложенности команды - 5.
.=
.2 Макропеременные
Документатор RIO допускает макропеременные двух типов:
.[
.@
макропеременные, определяемые программой RIO, которые
мы будем называть внутренними;
.@
макропеременные, определяемые пользователем, которые
мы будем называть внешними.
.]
.^
макропеременные определяются (или переопределяются)
командой .D (см. ниже) и включаются в текст
обращением \\XX, где XX - имя макропеременной.
.^
Имя макропеременной должно быть обязательно двухсимвольным и не
может содержать точку, пробел или обратную косую черту.
.3 Внутренние макропеременные
.^
Документатор RIO определяет 12 внутренних макропеременных:
.{
.? @_
обозначение документа;
.? @Y
две последних цифры текущего года (из системной даты);
.? @M
номер  текущего месяца  (из системной даты);
.? @D
номер текущего дня месяца (из системной даты);
.? @P
текущий номер страницы;
.? @L
текущее значение левого поля;
.? @R
текущее значение правого поля;
.? @C
текущий номер главы;
.? @1
текущий номер раздела;
.? @2
текущий номер подраздела;
.? @3
текущий номер пункта;
.? @"
текущий номер нумеруемого приложения.
.}
.^
Переопределять можно только макропеременные @C, @1, @2, @3, @".
.3 Внешние макропеременные
.= \im
 .D  - определить (переопределить) макропеременную
.= \fo
 .D XX [STRING]
.= \op
Определяется (переопределяется) макропеременная с именем XX.
ее значением становится строка STRING.
Если аргумент STRING опущен, устанавливается пустое значение.
.= \og
Имя макропеременной не может содержать символы точка,
пробел или обратная косая черта.
.=
.2  Фигуры
.^
Под фигурами будем понимать части текста, форматируемые
особым образом.
.^
К фигурам относятся:
.-
абзацы;
.-
пояснения;
.-
примечания;
.^
Относительно  абзацев,  пояснений  и  примечаний  нужно
сказать следующее:
.{
.?
горизонтальный отступ  фигуры  равен 5.
.?
вертикальное расстояние между предшествующим  текстом
и   фигурой  равно 1 строке.
.?
необходимое количество строк на странице  для  фигуры
равно 2.
.}
.3  Абзацы
.^
абзацы бывают следующих типов:
.-
простой абзац;
.-
абзац с номером;
.-
абзац с дефисом;
.-
абзац с висячим индексом (цифровым или литерным);
.-
абзац с висячим дефисом.
.|
абзацы представлены на рисунке 1.
.B 2
.D LI .: -------------
.D TX Под фигурами мы будем понимать части текста \
(документа), форматируемые особым образом.
\LI
.^
\TX
.B 1
\LI
.(
.+
\TX
.+
\TX
.)
.B 1
\LI
.-
\TX
.B 1
\LI
.[
.#
\TX
.#
\TX
.]
.B 1
\LI
.[
.@
\TX
.@
\TX
.]
.B 1
\LI
.{
.?
\TX
.}
\LI
.B 1
.:                     Рис. 1. Абзацы
.B 1
.= \im
  .^  - простой абзац
.= \fo
  .^
.= \im
  .(  - абзац с номером (начало)
.B
  .+  - абзац с номером (элемент)
.B
  .)  - абзац с номером (конец)
.= \fo
  .(
.B
  .+
.B
  .)
.= \op
Команда .( об'являет формирование абзацев с номером.
.B
Команда .+ формирует  очередной абзац           с  номером,  на  1
больше  текущего (начиная с номера 1).
.B
Команда .) оканчивает фигуру.
.= \im
  .-  - абзац с дефисом
.= \fo
  .-
.= \im
  .[  -  абзац с висячим индексом (начало)
.B
  .#  - абзац с висячим цифровым индексом (элемент)
.B
  .@  - абзац с висячим литерным индексом (элемент)
.B
  .]  - абзац с висячим индексом (конец)
.= \fo
  .[
.B
  .#
.B
  .@
.B
  .]
.= \op
Команда .[ об'являет формирование абзаца с индексом.
.B
Команда .# формирует очередной абзац с числовым индексом, на 1 большим
текущего (начиная с номера 1).
.B
Команда .@ формирует очередной абзац со следующим литерным индексом
                   (начиная с литеры A).
.B
Команда .]  оканчивает фигуру.
.= \og
Глубина вложенности этих фигур  друг  в  друга
должна  быть разумной.
.B
В пределах каждого
уровня  вложенности ведется своя нумерация абзацев и индексов.
.B
Литерный индекс ограничен диапазоном A-Z.
.=
.^
Абзац  с  висячим  дефисом  реализуется  командой
группового пояснения,
описанной в следующем пункте.
.3   Пояснения
.^
Документатор RIO поддерживает пояснения двух типов:
.-
Двухстрочное пояснение;
.-
Групповое пояснение.
.^
Пояснения представлены на рисунке 2.
.D TY     Поясняющий текст поясняющий текст поясняющий текст \
          поясняющий текст поясняющий текст поясняющий текст \
          поясняющий текст поясняющий текст
.B 2
\LI
.= Поясняемое
\TY
.B 1
.=
\LI
.{ 5
.? а
\TY
.? ABC
\TY
.? ABCDF
\TY
.}
\LI
.B 1
.:  Рис. 2. Пояснения
.B 1
.= \im
   .= - двухстрочное пояснение
.= \fo
   .= [STRING]
.= \op
Аргумент задает "поясняемое".
Поясняющий  текст  должен  следовать   за   данной
командой.   Фигура оканчивается командой без аргумента.
.= \im
  .{  - групповое пояснение (начало)
.B
  .?  - групповое пояснение (элемент)
.B
  .}  - групповое пояснение (конец)
.= \fo
  .{ [N]
.B
  .? [STRING]
.B
  .}
.= \op
Команда .{  начинает групповое пояснение с шириной
поясняемой части, определяемой аргументом N.
При отсутствии этого
аргумента  ширина поясняемой части принимается
равной 4.
.B
Команда .? задает  элемент  группового  пояснения.
аргумент  STRING задает "поясняемое".  Если ширина
аргумента  превосходит  ширину  поясняемой  части,
фиксируется ошибка.  Поясняющий текст
должен следовать за данной командой.
В отсутствие аргументов N и STRING формируется абзац с висячим дефисом.
.B
Команда .}  оканчивает фигуру.
.= \og
Вложенность этих фигур  друг  в  друга  не
допускается.
.=
.3  Примечания
Документатор RIO допускает
только одиночные примечания.
.= \im
   .! - примечание
.= \fo
   .! [STRING]
.= \op
Начинается примечание.  Центрируется
аргумент  или, если он опущен, слово
"примечание". левое поле увеличивается на 5.
Правое поле уменьшается на 5.
Делаются соответствующие вертикальные отступы.
Текст   примечания
должен следовать за данной командой.
.B
Повторная команда .! оканчивает примечание.
.B
Такая команда примечания удобна,
хотя и не вполне соответствует  требованиям ГОСТ.
Примечания близкие к гост можно получить, например, так:
.N

        .^ примечания:
        .(
        .+
        текст примечания 1
        .+
        текст примечания 2
        .)

.f
.=
.2  Приложения
.^
Приложения бывают двух типов:
.-
одиночное приложение;
.-
нумеруемое приложение.
.^
Каждое приложение начинается с новой страницы, в начале
которой печатается слово "приложение" в случае одиночного приложения
и "приложение N" в случае нумеруемого приложения  (здесь
N - номер приложения).
.^
Приложения могут   иметь  заголовки.
.= \im
  .' - одиночное приложение
.= \fo
  .' [STRING]
.= \op
Начинается одиночное  приложение.
Заголовок   приложения   определяется   аргументом
STRING.
.= \im
  ."  - нумеруемое приложение
.= \fo
  ." [STRING]
.= \op
Начинается   очередное   нумеруемое    приложение.
Заголовок  приложения определяется
аргументом  STRING.
Номер текущего приложения находится во внутренней
макропеременной @".
.=
.2 Содержание
.= \im
  .$  - вывести содержание
.= \fo
  .$
.= \op
Формируется заголовок "содержание" и
выводится содержание.
.= \og
Выведенное содержание закрывается и начинается
новое.
.=
.^
Содержание может быть выведено только в конце  документа,
но,например, в соответствии с еспд, оно должно находиться в начале
документа.
Поэтому, для правильной  нумерации  страниц  документа
необходимо  воспользоваться командами управления страницами.
Структура исходного текста документа представлена на
рисунке 3.
.^
Необходимо учесть, что содержание должно выводится на бланке
с той же шириной поля текста, что и для основной части текста.
.P 20
.n

         .% 1
         ._  обозначение_документа
         .! аннотация
         текст
         аннотации.
         .!
         .% 3
         текст
         основной
         части
         документа.
         .< лист_регистрации
         .% -
         .* ESPD.T
         .< лист_утверждения
         .< титульный_лист
         .*
         .% 2
         .$

      Рис. 3. Структура исходного текста документа
.f
.^
В этом примере предполагается следующее:
.-
аннотация имеет номер страницы,  равный  2  (страница
номер 1 - это титульный лист);
.-
содержание размещается на двух страницах.
.= \im
  .>  - поместить текст в содержание
.= \fo
  .> STRING
.= \op
аргумент STRING помещается в содержание. Номер страницы
не проставляется.
.=
.2  Форматирование с выводом \
на бланки
.= \im
  .*  - установить бланк
.= \fo
  .*  [STRING]
.= \op
Если  указан аргумент STRING, то в качестве бланка для
форматирования устанавливается файл с именем STRING.
.B
Команда без аргумента восстанавливает стандартное
состояние - форматирование без бланка (соответствует
требованиям ЕСПД).
.B
Текущий лист будет предварительно заполнен до конца.
для немедленного перехода к новому бланку
необходимо выполнить команду .P (перед или после
команды .*).
.= \og
Максимальная длина имени бланка 30 символов
(константа  LENFNAMES в файле RIO.H).
.=
.^
В состав комплекта бланков, поставляемых с документатором RIO,
входят (имя файла определяет ГОСТ):
.{ 7
.? ESPD.T
бланк для размещения   титульного листа и листа утверждения;
.? ESKD.T
бланк для размещения  титульного  листа и листа утверждения;
.? ESKD.B
бланк для размещения  содержания (лист 1);
.? ESKD.
бланк для размещения  основного текста;
.? SPDS.T
бланк для размещения  титульного  листа и листа утверждения;
.? SPDS.B
бланк для размещения  содержания (лист 1);
.? SPDS.
бланк для размещения  основного текста;
.}
.^
При создании собственных бланков следует учесть, что
позиция номера строки (обозначения документа),
переменная @P (@_),
определяется символом # (@).
При этом, если символ # (@) окружен пробелами, то
середина номера строки (обозначения документа)
будет приходиться на символ # (@), в противном случае,
заменяющий текст будет распространяться вправо,
если слева от символа # (@) не пробел, иначе влево.
.^
Выводимый на бланк текст будет размещен в прямоугольнике
очерченном звездочками (символ '*'), включая саму рамку из
звездочек.
Любой текст, находящийся вне рамки из звездочек,
будет выведен без изменения, а текст внутри рамки игнорируется.
.B
В приложениях 3\ -\ 6 приведены образцы основных бланков.
.1 Сообщения оператору
.^
Сообщения оператору имеют вид:
.B 1
.: файл XXXXXX строка NNN - текст_сообщения
.^
Здесь XXXXXX - имя текущего входного файла,
NNN - номер строки входного файла.
.^
Если ошибка встретилась
в команде, введенной в командной строке,
номер входной строки текста равен 0.
.^
Имя базового входного файла (файл стандартного ввода) - STDIN.
.^
Сообщения посылаются в стандартный выводной файл.
Этот файл ассоциирован с терминалом.
В системе UNIX средствами оболочки этот файл можно переназначить.
."  Перечень команд RIO
.N

 Имя               Значение                     Описание

 .A  ...... изменить режим автопараграфа......... 5.1.
 .B  ...... пропустить строки ................... 5.4.
 .C  ...... глава ............................... 5.3.
 .D  ...... определить макропеременную .......... 5.8.2.
 .F  ...... установить режим форматирования ..... 5.1.
 .H  ...... изменить режим переносов ............ 5.1.
 .HA ...... пространство после заголовков........ 5.1.
 .HB ...... пространство до заголовков........... 5.1.
 .I  ...... создать отсортированный файл индексов 5.6.
 .L  ...... установить левое поле ............... 5.5.
 .N  ...... отменить режим форматирования ....... 5.1.
 .P  ...... перейти на новую страницу ........... 5.2.
 .PA ...... пространство после колонтитула....... 5.1.
 .PB ...... пространство до поля страницы ....... 5.1.
 .R  ...... установить правое поле .............. 5.5.
 .S  ...... установить размеры листа ............ 5.1.
 .X  ...... занести индекс ...................... 5.5.
 ._  ...... установить обозначение документа .... 5.1.
 .%  ...... установить номер страницы ........... 5.2.
 .:  ...... центрировать текст .................. 5.5.
 .1  ...... рубрика. уровень=1 .................. 5.3.
 .2  ...... рубрика. уровень=2 .................. 5.3.
 . . .
 .9  ...... рубрика. уровень=9 .................. 5.3.
 .0  ...... ненумеруемая рубрика ................ 5.3.
 .'  ...... одиночное приложение ................ 5.10.
 ."  ...... нумеруемое приложение ............... 5.10.
 .>  ...... поместить в содержание .............. 5.11.
 .$  ...... вывести содержание .................. 5.11.
 .*  ...... установить бланк .................... 5.12.
 .^  ...... простой абзац ....................... 5.9.1.
 .|  ...... абзац без горизонтального отступа ... 5.4.
 .(  ...... абзац с номером (начало) ............ 5.9.1.
 .+  ...... абзац с номером (элемент) ........... 5.9.1.
 .)  ...... абзац с номером (конец) ............. 5.9.1.
 .-  ...... абзац с дефисом ..................... 5.9.1.
 .[  ...... абзац с висячим индексом (начало) ... 5.9.1.
 .#  ...... абзац с числовым индексом (элемент) . 5.9.1.
 .@  ...... абзац с литерным индексом (элемент) . 5.9.1.
 .]  ...... абзац с висячим индексом (конец) .... 5.9.1.
 .{  ...... групповое пояснение (начало) ........ 5.9.2.
 .?  ...... групповое пояснение (элемент) ....... 5.9.2.
 .}  ...... групповое пояснение (конец) ......... 5.9.2.
 .=  ...... двухстрочное пояснение .............. 5.9.2.
 .!  ...... примечание .......................... 5.9.3.
 .<  ...... подключить файл ..................... 5.7.
 .;  ...... комментарий ......................... 5.1.
.F
."              Внутренние переменные RIO
.B 2
.{ 2
.? @_
обозначение документа;
.? @Y
две последних цифры текущего года (из системной даты);
.? @M
номер  текущего месяца  (из системной даты);
.? @D
номер текущего дня месяца (из системной даты);
.? @P
текущий номер страницы;
.? @L
текущее значение левого поля;
.? @R
текущее значение правого поля;
.? @C
текущий номер главы;
.? @1
текущий номер раздела;
.? @2
текущий номер подраздела;
.? @3
текущий номер пункта;
.? @"
текущий номер нумеруемого приложения.
.}
.% -
.p
.$
